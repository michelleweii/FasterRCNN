from keras import backend as K

# 创建一个信息类，所有的常用常数都在init中定义就可以
class Config:
    def __init__(self):
        self.verbose = True
        # 选用什么样的网络做基础网络
        self.network = 'resnet50'

        # setting for data augmentation
        # 图像增强时用到的。是否水平或垂直镜像，是否旋转
        self.use_horizontal_flips = False
        self.use_vertical_flips = False
        self.rot_90 = False

        # anchor box scales
        self.anchor_box_scales = [128, 256, 512]

        # anchor box ratios
        self.anchor_box_ratios = [[1, 1], [1, 2], [2, 1]]

        # size to resize the smallest side of the image
        # 最短边规整到多长
        self.im_size = 28

        # image channel-wise mean to subtract
        # 图片通道像素值减多少
        self.img_channel_mean = [231.535, 231.535, 231.535]
        self.img_scaling_factor = 1.0

        # number of ROIs at once
        # 训练classifer的回归框
        # 经过rpn后输出的不止一个矩形框，所以这里我们是对多个ROI进行Pooling
        """
        输出是batch个vector，其中batch的值等于RoI的个数，
        vector的大小为channel * w * h；RoI Pooling的过程就是将一个个大小不同的box矩形框，
        都映射成大小固定（w * h）的矩形框；
        """
        self.num_rois = 4

        # stride at the RPN (this depends on the network configuration)
        # 特征图缩小的比例
        self.rpn_stride = 2
        # 是否要类平衡
        self.balanced_classes = False

        # scaling the stdev
        self.std_scaling = 4.0
        self.classifier_regr_std = [8.0, 8.0, 4.0, 4.0]

        # overlaps for RPN
        # rpn有效的最大和最小阈值
        self.rpn_min_overlap = 0.3
        self.rpn_max_overlap = 0.7

        # overlaps for classifier ROIs
        # 判断回归框属于什么类别的阈值
        self.classifier_min_overlap = 0.1
        self.classifier_max_overlap = 0.5

        # placeholder for the class mapping, automatically generated by the parser
        # 类别的映射表
        self.class_mapping = None

        # location of pretrained weights for the base network
        # weight files can be found at:
        # https://github.com/fchollet/deep-learning-models/releases/download/v0.2/resnet50_weights_th_dim_ordering_th_kernels_notop.h5
        # https://github.com/fchollet/deep-learning-models/releases/download/v0.2/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5

        # 模型参数存储的路径
        # self.model_path = 'model_trained/model_frcnn.vgg.hdf5' # by wj

        # params add by me
        # self.data_dir = '.data/' # by wj
        self.num_epochs = 3 # 3000

        # self.kitti_simple_label_file = 'kitti_simple_label.txt' # by wj

        # TODO: this field is set to simple_label txt, which in very simple format like:
        # TODO: /path/image_2/000000.png,712.40,143.00,810.73,307.92,Pedestrian, see kitti_simple_label.txt for detail
        # self.simple_label_file = 'simple_label.txt'  # by wj
        # #by wj --- train.py中重写了内容，所以没有必要有这里，不知道注释会不会报错

        self.config_save_file = 'config.pickle'
